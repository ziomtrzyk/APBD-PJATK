// <auto-generated />
using System;
using APBD_Kolokwium2B.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APBD_Kolokwium2B.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250608182024_AddAll")]
    partial class AddAll
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APBD_Kolokwium2B.Models.Concert", b =>
                {
                    b.Property<int>("ConcertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConcertId"));

                    b.Property<int>("AvailableTickets")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ConcertId");

                    b.ToTable("Concerts");

                    b.HasData(
                        new
                        {
                            ConcertId = 1,
                            AvailableTickets = 100,
                            Date = new DateTime(2025, 6, 7, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Concert 1"
                        },
                        new
                        {
                            ConcertId = 2,
                            AvailableTickets = 150,
                            Date = new DateTime(2025, 6, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Concert 14"
                        });
                });

            modelBuilder.Entity("APBD_Kolokwium2B.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            CustomerId = 2,
                            FirstName = "Jane",
                            LastName = "Smith",
                            PhoneNumber = "987654321"
                        });
                });

            modelBuilder.Entity("APBD_Kolokwium2B.Models.Purchased_Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TicketId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Purchased_Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            CustomerId = 1,
                            PurchaseDate = new DateTime(2025, 6, 3, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TicketId = 2,
                            CustomerId = 1,
                            PurchaseDate = new DateTime(2025, 6, 3, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("APBD_Kolokwium2B.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TicketId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            SeatNumber = 124,
                            SerialNumber = "s1231"
                        },
                        new
                        {
                            TicketId = 2,
                            SeatNumber = 330,
                            SerialNumber = "s5453"
                        },
                        new
                        {
                            TicketId = 3,
                            SeatNumber = 125,
                            SerialNumber = "s5444"
                        });
                });

            modelBuilder.Entity("APBD_Kolokwium2B.Models.Ticket_Concert", b =>
                {
                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<int>("ConcertId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("TicketId", "ConcertId");

                    b.HasIndex("ConcertId");

                    b.ToTable("Ticket_Concerts");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            ConcertId = 1,
                            Price = 33.4m
                        },
                        new
                        {
                            TicketId = 2,
                            ConcertId = 2,
                            Price = 48.4m
                        },
                        new
                        {
                            TicketId = 3,
                            ConcertId = 1,
                            Price = 32.4m
                        });
                });

            modelBuilder.Entity("APBD_Kolokwium2B.Models.Purchased_Ticket", b =>
                {
                    b.HasOne("APBD_Kolokwium2B.Models.Customer", "Customer")
                        .WithMany("PurchasedTickets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBD_Kolokwium2B.Models.Ticket", "Ticket")
                        .WithMany("PurchasedTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("APBD_Kolokwium2B.Models.Ticket_Concert", b =>
                {
                    b.HasOne("APBD_Kolokwium2B.Models.Concert", "Concert")
                        .WithMany("TicketConcerts")
                        .HasForeignKey("ConcertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBD_Kolokwium2B.Models.Ticket", "Ticket")
                        .WithMany("TicketConcerts")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concert");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("APBD_Kolokwium2B.Models.Concert", b =>
                {
                    b.Navigation("TicketConcerts");
                });

            modelBuilder.Entity("APBD_Kolokwium2B.Models.Customer", b =>
                {
                    b.Navigation("PurchasedTickets");
                });

            modelBuilder.Entity("APBD_Kolokwium2B.Models.Ticket", b =>
                {
                    b.Navigation("PurchasedTickets");

                    b.Navigation("TicketConcerts");
                });
#pragma warning restore 612, 618
        }
    }
}
